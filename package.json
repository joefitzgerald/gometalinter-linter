{
  "name": "gometalinter-linter",
  "description": "A linter package for the Go language that uses gometalinter to run many linters simultaneously.",
  "keywords": [
    "go",
    "golang",
    "linter",
    "gometalinter",
    "gofmt",
    "goimports",
    "vet",
    "golint",
    "gotype",
    "errcheck",
    "ineffassign",
    "deadcode",
    "gocyclo",
    "test",
    "dupl",
    "structcheck",
    "testify",
    "vetshadow",
    "varcheck",
    "defercheck",
    "aligncheck"
  ],
  "main": "./lib/main",
  "version": "1.1.0",
  "repository": "https://github.com/joefitzgerald/gometalinter-linter",
  "license": "Apache-2.0",
  "engines": {
    "atom": ">=1.5.3 <2.0.0"
  },
  "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
  "homepage": "https://atom.io/packages/gometalinter-linter",
  "bugs": {
    "url": "https://github.com/joefitzgerald/gometalinter-linter/issues"
  },
  "dependencies": {
    "atom-package-deps": "^4.0.1"
  },
  "devDependencies": {
    "eslint": "^3.3.1",
    "babel-eslint": "^6.0.0-beta.6",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-standard": "^1.3.2",
    "eslint-plugin-promise": "^1.1.0"
  },
  "package-deps": [
    "go-config",
    "go-get",
    "linter"
  ],
  "consumedServices": {
    "go-config": {
      "versions": {
        "1.0.0": "consumeGoconfig"
      }
    },
    "go-get": {
      "versions": {
        "1.0.0": "consumeGoget"
      }
    }
  },
  "providedServices": {
    "linter": {
      "versions": {
        "1.0.0": "provide"
      }
    }
  },
  "configSchema": {
    "args": {
      "title": "gometalinter Arguments",
      "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
      "type": "array",
      "default": [
        "--vendor",
        "--disable-all",
        "--enable=vet",
        "--enable=vetshadow",
        "--enable=golint",
        "--enable=ineffassign",
        "--enable=goconst",
        "--tests",
        "--json",
        "."
      ],
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "standard": {
    "globals": [
      "atom",
      "waitsForPromise"
    ]
  }
}
